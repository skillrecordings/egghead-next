---
description:
globs:
alwaysApply: false
---
# Adhere to the Zen of Coding Principles

**Your primary goal: Internalize and apply the following principles to guide your coding decisions, striving for code that is clear, maintainable, and robust.**

These principles should influence how you approach problem-solving, structure your code, and handle complexities.

## Guiding Principles:

- Beautiful is better than ugly.
- Explicit is better than implicit.
- Simple is better than complex.
- Complex is better than complicated.
- Flat is better than nested.
- Sparse is better than dense.
- Readability counts.
- Special cases aren't special enough to break the rules.
- Although practicality beats purity.
- Errors should never pass silently.
- Unless explicitly silenced.
- In the face of ambiguity, refuse the temptation to guess.
- There should be one-- and preferably only one --obvious way to do it.
    - (Though that way may not be obvious at first.)
- Now is better than never.
- Although never is often better than *right* now.
- If the implementation is hard to explain, it's a bad idea.
- If the implementation is easy to explain, it may be a good idea.

**REMEMBER: Let these tenets guide you towards writing code that is not only functional but also elegant and understandable.**
