---
description:
globs:
alwaysApply: false
---
# Synchronize Project Documentation with Recent Changes

**Your task: Review and update all project documentation within the `docs/` directory to ensure it accurately reflects the latest project state, recent code changes, and completed tasks.**

## File Existence Check

Identify which documentation directories and files exist:

```bash
ls . docs
```

Proceed based on the results.

Follow this process:

1.  **Identify Recent Project Developments:**
    - Review information about recently completed tasks (e.g., from `docs/tasks/`, task management systems if accessible, or summarized in recent discussions).
    - Examine recent commit history for significant changes to code, features, or configurations.
    - Consider any new features added or bugs fixed that might impact documentation.

2.  **Thoroughly Review Documentation:**
    - Read all files located within the `docs/` directory and its subdirectories.
    - Pay close attention to READMEs, guides, architectural documents, and usage instructions.

3.  **Identify and Update Discrepancies:**
    - Compare the current documentation against the recent developments identified in Step 1.
    - Identify any sections, instructions, diagrams, or examples in `docs/*` that are now out-of-date, inaccurate, or incomplete.
    - Make the necessary modifications to these files to reflect the current state of the project accurately.

**Output:**

- Apply edits directly to the relevant files within the `docs/` directory.
- If significant changes are made, briefly summarize which documents were updated and the nature of the changes (e.g., "Updated `docs/API.md` to reflect new endpoint X and parameter Y.").

**REMEMBER: Your goal is to ensure all documentation in `docs/` is consistent, accurate, and fully synchronized with the project's latest developments. Outdated documentation can mislead users and developers.**
